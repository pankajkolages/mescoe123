# Step 0: Load Dataset
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv('/mnt/data/Academic_performance.csv')
print(df.head())

# Step 1: Missing Values
print("\nMissing Values:")
print(df.isnull().sum())

# Fill missing values
numeric_cols = df.select_dtypes(include=[np.number]).columns
df[numeric_cols] = df[numeric_cols].fillna(df[numeric_cols].median())

categorical_cols = df.select_dtypes(include=['object']).columns
for col in categorical_cols:
    df[col] = df[col].fillna(df[col].mode()[0])

print("\nMissing values after handling:")
print(df.isnull().sum())

# Step 2: Outlier Detection and Handling
numeric_columns = df.select_dtypes(include=[np.number]).columns

for col in numeric_columns:
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    df[col] = np.where(df[col] < lower_bound, lower_bound, df[col])
    df[col] = np.where(df[col] > upper_bound, upper_bound, df[col])

# Step 3: Data Transformation
sns.histplot(df['Marks'], kde=True)
plt.title('Marks Distribution Before Transformation')
plt.show()

# Log Transform
df['Marks_log'] = np.log1p(df['Marks'])

sns.histplot(df['Marks_log'], kde=True)
plt.title('Marks Distribution After Log Transformation')
plt.show()
